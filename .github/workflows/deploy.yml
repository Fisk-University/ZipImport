name: Deploy ZipImport Module via Git Tag

on:
  push:
    tags:
      - 'v*.*.*-*'  # Example: v1.0.0-dev, v2.1.3-stage

jobs:
  parse-env:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.setenv.outputs.env }}
      tag_name: ${{ github.ref_name }}
    steps:
      - name: Parse environment from tag
        id: setenv
        run: |
          TAG="${{ github.ref_name }}"
          ENV=$(echo "$TAG" | grep -oE '(dev|test|stage|prod)$')
          if [ -z "$ENV" ]; then
            echo "Tag must end in -dev, -test, -stage, or -prod"
            exit 1
          fi
          echo "env=$ENV" >> $GITHUB_OUTPUT
          echo "tag_name=$TAG" >> $GITHUB_OUTPUT

  deploy:
    needs: parse-env
    runs-on: self-hosted
    environment: ${{ needs.parse-env.outputs.env_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Package module artifact
        run: |
          MODULE_NAME="ZipImport"
          TAG="${{ needs.parse-env.outputs.tag_name }}"
          ZIP_NAME="${MODULE_NAME}_${TAG}.zip"

          # Exclude unnecessary .zip file from repo
          zip -r "$ZIP_NAME" . -x ".git/*" "GitHub Sample Upload Structure.zip"

          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Upload artifact to S3
        run: |
          aws s3 cp "$ZIP_NAME" "s3://${{ secrets.S3_BUCKET_NAME }}/${{ needs.parse-env.outputs.env_name }}/artifacts/modules/$ZIP_NAME"

      - name: Trigger and Monitor Deployment via SSM
        run: |
          ENV="${{ needs.parse-env.outputs.env_name }}"
          TAG="${{ needs.parse-env.outputs.tag_name }}"
          INSTANCE_ID="${{ secrets.INSTANCE_ID }}"
          S3_BUCKET="${{ secrets.S3_BUCKET_NAME }}"
          ZIP_NAME="ZipImport_${TAG}.zip"

          echo "Starting deployment..."
          CMD_ID=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --instance-ids "$INSTANCE_ID" \
            --comment "Deploy ZipImport Module $TAG" \
            --parameters "commands=[
              \"aws s3 cp s3://$S3_BUCKET/$ENV/artifacts/modules/$ZIP_NAME /tmp/module-artifact.zip\",
              \"unzip -o /tmp/module-artifact.zip -d /tmp/deployed-module\",
              \"chmod +x /tmp/deployed-module/.github/workflows/deploy.sh\",
              \"/tmp/deployed-module/.github/workflows/deploy.sh $ENV $TAG\"
            ]" \
            --region us-east-1 \
            --query "Command.CommandId" \
            --output text)

          echo "SSM Command ID: $CMD_ID"
          echo "Waiting for deployment to complete..."

          sleep 15
          STATUS="InProgress"
          TIMEOUT=60
          ELAPSED=0

          while [[ "$STATUS" == "InProgress" && "$ELAPSED" -lt "$TIMEOUT" ]]; do
            STATUS=$(aws ssm get-command-invocation \
              --command-id "$CMD_ID" \
              --instance-id "$INSTANCE_ID" \
              --region us-east-1 \
              --query "Status" \
              --output text)
            echo "Current status: $STATUS"
            sleep 5
            ELAPSED=$((ELAPSED + 5))
          done

          echo "==== SSM OUTPUT BEGIN ===="
          aws ssm get-command-invocation \
            --command-id "$CMD_ID" \
            --instance-id "$INSTANCE_ID" \
            --region us-east-1 \
            --query "StandardOutputContent" \
            --output text || echo "[ERROR] Could not fetch SSM output"
          echo "==== SSM OUTPUT END ===="

          if [[ "$STATUS" != "Success" ]]; then
            echo "::error ::Deployment failed with status: $STATUS"
            exit 1
          fi
